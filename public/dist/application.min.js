"use strict";var ApplicationConfiguration=function(){var applicationModuleName="avuxeni",applicationModuleVendorDependencies=["ngResource","ui.router","ngAnimate","ui.utils","angularFileUpload","ngMaterial","angular-svg-round-progress","vAccordion","uiGmapgoogle-maps","ngMdIcons","ngMessages","angularFileUpload"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();
"use strict";angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.html5Mode(!0).hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])});
"use strict";ApplicationConfiguration.registerModule("chat");
"use strict";ApplicationConfiguration.registerModule("chemicaldocs");
"use strict";ApplicationConfiguration.registerModule("core");
"use strict";ApplicationConfiguration.registerModule("sites");
"use strict";ApplicationConfiguration.registerModule("ownerships");
"use strict";ApplicationConfiguration.registerModule("users");
"use strict";angular.module("users").factory("Admins",["$resource",function($resource){return $resource("api/admins/:userId",{userId:"@_id"},{update:{method:"PUT"}})}]);
"use strict";angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]);
"use strict";angular.module("users").factory("Users",["$resource",function($resource){return $resource("/api/users/:userId",{userId:"@_id"},{update:{method:"PUT"}})}]);
"use strict";angular.module("users").controller("ChangePasswordController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/api/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]);
"use strict";angular.module("users").controller("ChangeProfilePictureController",["$scope","$timeout","$window","Authentication","FileUploader",function($scope,$timeout,$window,Authentication,FileUploader){$scope.user=Authentication.user,$scope.imageURL=$scope.user.profileImageURL,$scope.uploader=new FileUploader({url:"api/users/picture"}),$scope.uploader.filters.push({name:"imageFilter",fn:function(item){var type="|"+item.type.slice(item.type.lastIndexOf("/")+1)+"|";return-1!=="|jpg|png|jpeg|bmp|gif|".indexOf(type)}}),$scope.uploader.onAfterAddingFile=function(fileItem){if($window.FileReader){var fileReader=new FileReader;fileReader.readAsDataURL(fileItem._file),fileReader.onload=function(fileReaderEvent){$timeout(function(){$scope.imageURL=fileReaderEvent.target.result,console.log($scope.imageURL)},0)}}},$scope.uploader.onSuccessItem=function(fileItem,response){$scope.success=!0,$scope.user=Authentication.user=response,$scope.cancelUpload()},$scope.uploader.onErrorItem=function(fileItem,response){$scope.cancelUpload(),$scope.error=response.message},$scope.uploadProfilePicture=function(){$scope.success=$scope.error=null,$scope.uploader.uploadAll()},$scope.cancelUpload=function(){$scope.uploader.clearQueue(),$scope.imageURL=$scope.user.profileImageURL}}]);
"use strict";angular.module("users").controller("EditProfileController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0}}]);
"use strict";angular.module("users").controller("SocialAccountsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http.delete("/api/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})}}]);
"use strict";angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/")}]);
"use strict";angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]);
"use strict";angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("settings",{"abstract":!0,url:"/settings",templateUrl:"modules/users/views/settings/settings.client.view.html"}).state("settings.profile",{url:"/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("settings.password",{url:"/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("settings.accounts",{url:"/accounts",templateUrl:"modules/users/views/settings/manage-social-accounts.client.view.html"}).state("settings.picture",{url:"/picture",templateUrl:"modules/users/views/settings/change-profile-picture.client.view.html"}).state("authentication",{"abstract":!0,url:"/authentication",templateUrl:"modules/users/views/authentication/authentication.client.view.html"}).state("authentication.signup",{"abstract":!0,url:"/signup",template:"<ui-view/>"}).state("authentication.signup.user",{url:"/user",templateUrl:"modules/users/views/authentication/signup/user.client.view.html"}).state("authentication.signup.admin",{url:"/admin",templateUrl:"modules/users/views/authentication/signup/admin.client.view.html"}).state("authentication.signup.guest",{url:"/guest",templateUrl:"modules/users/views/authentication/signup/guest.client.view.html"}).state("authentication.signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("password",{"abstract":!0,url:"/password",template:"<ui-view/>"}).state("password.forgot",{url:"/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("password.reset",{"abstract":!0,url:"/reset",template:"<ui-view/>"}).state("password.reset.invalid",{url:"/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("password.reset.success",{url:"/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("password.reset.form",{url:"/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"}).state("users",{"abstract":!0,url:"/users",template:"<ui-view/>"}).state("users.list",{url:"/list",templateUrl:"modules/users/views/users/list-users.client.view.html"}).state("users.create",{url:"/create",templateUrl:"modules/articles/views/create-article.client.view.html"}).state("users.view",{url:"/:userId",templateUrl:"modules/articles/views/view-article.client.view.html"}).state("users.edit",{url:"/:userId/edit",templateUrl:"modules/articles/views/edit-article.client.view.html"}).state("guests",{"abstract":!0,url:"/guests",template:"<ui-view/>"}).state("guests.list",{url:"",templateUrl:"modules/users/views/guests/list-guests.client.view.html"}).state("guests.create",{url:"/create",templateUrl:"modules/articles/guests/create-guest.client.view.html"}).state("guests.view",{url:"/:userId",templateUrl:"modules/articles/guests/view-guest.client.view.html"}).state("guests.edit",{url:"/:userId/edit",templateUrl:"modules/articles/guests/edit-guest.client.view.html"}).state("admins",{"abstract":!0,url:"/admins",template:"<ui-view/>"}).state("admins.list",{url:"",templateUrl:"modules/users/views/admins/list-admins.client.view.html"}).state("admin.create",{url:"/create",templateUrl:"modules/articles/admins/create-admin.client.view.html"}).state("admins.view",{url:"/:userId",templateUrl:"modules/articles/admins/view-admin.client.view.html"}).state("admins.edit",{url:"/:userId/edit",templateUrl:"modules/articles/admins/edit-admin.client.view.html"})}]);
"use strict";angular.module("users").run(["Menus",function(){}]);
"use strict";angular.module("users").controller("AdminsController",["$scope","Admins",function($scope,Admins){$scope.find=function(){$scope.admins=Admins.query()}}]);
"use strict";angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication","$timeout","$mdDialog","Users",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.createSite=function(){$location.path("/sites/create")},$scope.listUsers=function(){$location.path("/users/list")},$scope.confirmState=["true"],$scope.showConfirm=function(){$scope.confirmState.splice(0,1,"true")},$scope.hideConfirm=function(){$scope.confirmState.splice(0,1,"false")},$scope.signup=function(role){$scope.credentials.roles=[];var rolesCount=$scope.credentials.roles.length;rolesCount>=1&&$scope.credentials.roles.splice(0,rolesCount),"admin"===role?($scope.credentials.roles.push("admin"),signup()):"guest"===role?($scope.credentials.roles.push("guest"),signup()):"user"===role?($scope.credentials.roles.push("user"),signup()):"sub_user"===role&&($scope.credentials.roles.push("sub_user"),signup())};var signup=function(){$http.post("/api/auth/signup",$scope.credentials).success(function(response){$scope.newUser=response.user,$scope.successfulMessage=response.message,$scope.showConfirm()}).error(function(response){$scope.error=response.message})};$scope.signin=function(){$http.post("/api/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/dashboard")}).error(function(response){$scope.error=response.message})}}]);
"use strict";angular.module("users").controller("DialogController",["$scope","$mdDialog",function(){}]);
"use strict";angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/api/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/api/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]);
"use strict";angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http.delete("/api/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/api/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]);
"use strict";angular.module("users").controller("UsersController",["$scope","Users","$mdDialog",function($scope,Users,$mdDialog){function DialogController($scope,$mdDialog){$scope.hide=function(){$mdDialog.hide()},$scope.cancel=function(){$mdDialog.cancel()},$scope.answer=function(answer){$mdDialog.hide(answer)}}$scope.find=function(){$scope.users=Users.query()},$scope.showAdvanced=function(ev){$mdDialog.show({controller:DialogController,templateUrl:"/modules/users/views/users/confirm-new-user.client.view.html",targetEvent:ev})},DialogController.$inject=["$scope","$mdDialog"]}]);
"use strict";angular.module("chat").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Chat",state:"chat"})}]);
"use strict";angular.module("chat").config(["$stateProvider",function($stateProvider){$stateProvider.state("chat",{url:"/chat",templateUrl:"modules/chat/views/chat.client.view.html"})}]);
"use strict";angular.module("chat").controller("ChatController",["$scope","Socket",function($scope,Socket){$scope.messages=[],Socket.on("chatMessage",function(message){$scope.messages.unshift(message)}),$scope.sendMessage=function(){var message={text:this.messageText};Socket.emit("chatMessage",message),this.messageText=""},$scope.$on("$destroy",function(){Socket.removeListener("chatMessage")})}]);
"use strict";angular.module("chemicaldocs").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Chemicaldocs",state:"chemicaldocs",type:"dropdown"}),Menus.addSubMenuItem("topbar","chemicaldocs",{title:"List Chemicaldocs",state:"chemicaldocs.list"}),Menus.addSubMenuItem("topbar","chemicaldocs",{title:"Create Chemicaldoc",state:"chemicaldocs.create"})}]);
"use strict";angular.module("chemicaldocs").config(["$stateProvider",function($stateProvider){$stateProvider.state("chemicaldocs",{"abstract":!0,url:"/chemicaldocs",template:"<ui-view/>"}).state("chemicaldocs.list",{url:"",templateUrl:"modules/chemicaldocs/views/list-chemicaldocs.client.view.html"}).state("chemicaldocs.create",{url:"/create",templateUrl:"modules/chemicaldocs/views/create-chemicaldoc.client.view.html"}).state("chemicaldocs.view",{url:"/:chemicaldocId",templateUrl:"modules/chemicaldocs/views/view-chemicaldoc.client.view.html"}).state("chemicaldocs.edit",{url:"/:chemicaldocId/edit",templateUrl:"modules/chemicaldocs/views/edit-chemicaldoc.client.view.html"})}]);
"use strict";angular.module("chemicaldocs").controller("ChemicaldocsController",["$scope","$stateParams","$location","Authentication","Chemicaldocs","$timeout","$window","$upload",function($scope,$stateParams,$location,Authentication,Chemicaldocs,$timeout,$window,$upload){$scope.authentication=Authentication,$scope.user=Authentication.user,$scope.uploadFile=function(){var file=$scope.file,newfilename=$scope.doc.no+"_"+$scope.doc.name+"_"+$scope.doc.type,uploaddir="./uploads/"+$scope.user._id;console.log(uploaddir),$upload.upload({url:"api/chemicaldoc/upload",method:"POST",fields:{type:$scope.doc.type,name:$scope.doc.name,no:$scope.doc.no,filename:newfilename,dir:uploaddir},file:file}).progress(function(evt){var progressPercentage=parseInt(100*evt.loaded/evt.total);console.log(progressPercentage)}).success(function(data,status,headers,config){console.log("file "+config.file.name+"is uploaded successfully. Response: "+data)})},$scope.create=function(){var chemicaldoc=new Chemicaldocs({name:this.name,type:this.type,no:this.no,docURL:this.docURL});chemicaldoc.$save(function(){$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(chemicaldoc){if(chemicaldoc){chemicaldoc.$remove();for(var i in $scope.chemicaldocs)$scope.chemicaldocs[i]===chemicaldoc&&$scope.chemicaldocs.splice(i,1)}else $scope.chemicaldoc.$remove(function(){$location.path("chemicaldocs")})},$scope.update=function(){var chemicaldoc=$scope.chemicaldoc;chemicaldoc.$update(function(){$location.path("chemicaldocs/"+chemicaldoc._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.chemicaldocs=Chemicaldocs.query()},$scope.findOne=function(){$scope.chemicaldoc=Chemicaldocs.get({chemicaldocId:$stateParams.chemicaldocId})}}]);
"use strict";angular.module("chemicaldocs").factory("Chemicaldocs",["$resource",function($resource){return $resource("api/chemicaldocs/:chemicaldocId",{chemicaldocId:"@_id"},{update:{method:"PUT"}})}]);
"use strict";angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("dashboard",{url:"/dashboard",templateUrl:"modules/core/views/dashboard.client.view.html"}).state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"}).state("features",{url:"/features",templateUrl:"modules/core/views/features.client.view.html"}).state("about",{url:"/about",templateUrl:"modules/core/views/about.client.view.html"})}]);
"use strict";angular.module("core").config(["uiGmapGoogleMapApiProvider",function(uiGmapGoogleMapApiProvider){uiGmapGoogleMapApiProvider.configure({v:"3.17",libraries:"weather,geometry,visualization"})}]);
"use strict";angular.module("core").config(["$mdThemingProvider",function($mdThemingProvider){$mdThemingProvider.definePalette("afruPrimary",{50:"FFF3E0",100:"FFE0B2",200:"FFCC80",300:"FFB74D",400:"FFA726",500:"FF9800",600:"FB8C00",700:"F57C00",800:"EF6C00",900:"E65100",A100:"FFD180",A200:"FFAB40",A400:"FF9100",A700:"FF6D00",contrastDefaultColor:"light",contrastDarkColors:["50","100","200","300","400","A100"],contrastLightColors:void 0}),$mdThemingProvider.definePalette("afruAccent",{50:"E8EAF6",100:"C5CAE9",200:"9FA8DA",300:"7986CB",400:"5C6BC0",500:"3F51B5",600:"3949AB",700:"F57C00",800:"EF6C00",900:"E65100",A100:"FFD180",A200:"FFAB40",A400:"FF9100",A700:"FF6D00",contrastDefaultColor:"light",contrastDarkColors:["50","100","200","300","400","A100"],contrastLightColors:void 0}),$mdThemingProvider.theme("default").primaryPalette("afruPrimary").accentPalette("indigo")}]);
"use strict";angular.module("core").run(["Menus",function(){}]);
"use strict";angular.module("core").controller("DashboardController",["$scope","Authentication","uiGmapGoogleMapApi","roundProgressService","$timeout",function($scope,Authentication,uiGmapGoogleMapApi,roundProgressService,$timeout){$scope.authentication=Authentication,uiGmapGoogleMapApi.then(function(maps){var mapOptions={panControl:!0,zoomControl:!0,scaleControl:!0,mapTypeControl:!0,scrollwheel:!1,mapTypeId:maps.MapTypeId.HYBRID};$scope.map={center:{latitude:-23.881835,longitude:30.148423},zoom:17,options:mapOptions}}),$scope.current=25,$scope.max=50,$scope.uploadCurrent=0,$scope.stroke=5,$scope.radius=50,$scope.isSemi=!1,$scope.rounded=!1,$scope.currentColor="#45ccce",$scope.bgColor="#eaeaea",$scope.iterations=50,$scope.currentAnimation="easeOutCubic";var timeout,random=function(min,max){return Math.round(Math.floor(Math.random()*(max-min+1)+min))};$scope.increment=function(amount){$scope.current+=amount||1},$scope.decrement=function(amount){$scope.current-=amount||1},$scope.start=function(){$scope.stop(),timeout=$timeout(function(){$scope.uploadCurrent+=random(1,5),$scope.uploadCurrent<100&&$scope.start()},random(100,500))},$scope.stop=function(){$timeout.cancel(timeout)},$scope.reset=function(){$scope.stop(),$scope.uploadCurrent=0},$scope.animations=[],angular.forEach(roundProgressService.animations,function(value,key){$scope.animations.push(key)})}]);
"use strict";angular.module("core").controller("HeaderController",["$scope","$state","Authentication","Menus","$timeout","$mdSidenav","$log",function($scope,$state,Authentication,Menus,$timeout,$mdSidenav,$log){$scope.toggleLeft=function(){$mdSidenav("left").toggle().then(function(){$log.debug("toggle left is done")})},$scope.close=function(){$mdSidenav("left").close().then(function(){$log.debug("close LEFT is done")})},$scope.$state=$state,$scope.authentication=Authentication,$scope.menu=Menus.getMenu("topbar"),console.log($scope.menu),$scope.collapseProfile=!0,$scope.toggleProfile=function(){$scope.collapseProfile=!$scope.collapseProfile},$scope.closeProfile=function(){$scope.collapseProfile=!0},$scope.isCollapsed=!1,$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]);
"use strict";angular.module("core").controller("HomeController",["$scope","Authentication","uiGmapGoogleMapApi",function($scope,Authentication,uiGmapGoogleMapApi){$scope.authentication=Authentication,uiGmapGoogleMapApi.then(function(maps){var mapOptions={panControl:!0,zoomControl:!0,scaleControl:!0,mapTypeControl:!0,mapTypeId:maps.MapTypeId.HYBRID};$scope.map={center:{latitude:-23.744983,longitude:30.15045},zoom:16,options:mapOptions}})}]);
"use strict";angular.module("core").controller("LeftController",["$scope","$timeout","$mdSidenav","$log","Menus","Authentication",function($scope,$timeout,$mdSidenav,$log,Menus,Authentication){$scope.authentication=Authentication,$scope.sidenav=Menus.getMenu("sidenav"),$scope.close=function(){$mdSidenav("left").close().then(function(){$log.debug("close LEFT is done")})}}]);
"use strict";angular.module("core").controller("RightController",["$scope",function(){}]);
"use strict";angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,options){return options=options||{},this.menus[menuId]={isPublic:null===options.isPublic||"undefined"==typeof options.isPublic?!0:options.isPublic,roles:options.roles,items:options.items||[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,options){if(options=options||{},this.validateMenuExistance(menuId),this.menus[menuId].items.push({icon:options.icon,title:options.title||"",state:options.state||"",type:options.type||"item","class":options.class,isPublic:null===options.isPublic||"undefined"==typeof options.isPublic?this.menus[menuId].isPublic:options.isPublic,roles:null===options.roles||"undefined"==typeof options.roles?this.menus[menuId].roles:options.roles,position:options.position||0,items:[],shouldRender:shouldRender}),options.items)for(var i in options.items)this.addSubMenuItem(menuId,options.link,options.items[i]);return this.menus[menuId]},this.addSubMenuItem=function(menuId,parentItemState,options){options=options||{},this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].state===parentItemState&&this.menus[menuId].items[itemIndex].items.push({title:options.title||"",state:options.state||"",isPublic:null===options.isPublic||"undefined"==typeof options.isPublic?this.menus[menuId].items[itemIndex].isPublic:options.isPublic,roles:null===options.roles||"undefined"==typeof options.roles?this.menus[menuId].items[itemIndex].roles:options.roles,position:options.position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar",{isPublic:!1}),this.addMenu("sidenav",{isPublic:!1,roles:["user","admin"]}),this.addMenuItem("sidenav",{icon:"messages",title:"Messages",state:"messages","class":"sidenav-icon",isPublic:!1,roles:["user","admin"],position:0}),this.addSubMenuItem("sidenav","messages",{title:"Inbox",state:"inbox",isPublic:!1,roles:["user","admin"],position:0}),this.addSubMenuItem("sidenav","messages",{title:"Sent",state:"sent",isPublic:!1,roles:["user","admin"],position:1}),this.addMenuItem("sidenav",{icon:"notifications",title:"Notifications",state:"notifications","class":"sidenav-icon",isPublic:!1,roles:["user","admin"],position:1}),this.addMenuItem("sidenav",{icon:"location",title:"Site",state:"site","class":"sidenav-icon",isPublic:!1,roles:["user","admin"],position:2}),this.addSubMenuItem("sidenav","site",{title:"background",state:"background",isPublic:!1,roles:["user"],position:0}),this.addSubMenuItem("sidenav","site",{title:"Ownership",state:"ownership",isPublic:!1,roles:["user"],position:1}),this.addSubMenuItem("sidenav","site",{title:"Maps",state:"map",isPublic:!1,roles:["user"],position:2}),this.addSubMenuItem("sidenav","site",{title:"Conservation",state:"conservation",isPublic:!1,roles:["user"],position:3}),this.addMenuItem("sidenav",{icon:"input",title:"Input",state:"input","class":"sidenav-icon",isPublic:!1,roles:["user","admin"],position:3}),this.addSubMenuItem("sidenav","input",{title:"Chemical",state:"chemicals",isPublic:!1,roles:["user"],position:0}),this.addSubMenuItem("sidenav","input",{title:"Fertilizer",state:"fertilizers",isPublic:!1,roles:["user"],position:1}),this.addSubMenuItem("sidenav","input",{title:"Electricity",state:"electricities",isPublic:!1,roles:["user"],position:2}),this.addSubMenuItem("sidenav","input",{title:"Water",state:"waters",isPublic:!1,roles:["user"],position:3}),this.addSubMenuItem("sidenav","input",{title:"Plant Material",state:"pmaterials",isPublic:!1,roles:["user"],position:4}),this.addSubMenuItem("sidenav","input",{title:"Subcontractors",state:"subcontractors",isPublic:!1,roles:["user"],position:5}),this.addMenuItem("sidenav",{icon:"output",title:"Output",state:"output","class":"sidenav-icon",isPublic:!1,roles:["user","admin"],position:4}),this.addSubMenuItem("sidenav","output",{title:"Avo",state:"avos",isPublic:!1,roles:["user"],position:0}),this.addSubMenuItem("sidenav","output",{title:"Macadamia",state:"macadamias",isPublic:!1,roles:["user"],position:1}),this.addSubMenuItem("sidenav","output",{title:"Pollution",state:"pollutions",isPublic:!1,roles:["user"],position:2}),this.addSubMenuItem("sidenav","output",{title:"Waste",state:"waste",isPublic:!1,roles:["user"],position:3}),this.addMenuItem("sidenav",{icon:"people",title:"People",state:"people","class":"sidenav-icon",isPublic:!1,roles:["user","admin"],position:5}),this.addSubMenuItem("sidenav","people",{title:"Healt & Safety",state:"healtsafety",isPublic:!1,roles:["user"],position:0}),this.addSubMenuItem("sidenav","people",{title:"Training $ Development",state:"trainingdevelopment",isPublic:!1,roles:["user"],position:1}),this.addSubMenuItem("sidenav","people",{title:"Employment",state:"employment",isPublic:!1,roles:["user"],position:2}),this.addSubMenuItem("sidenav","people",{title:"Employment Equity",state:"employmentequity",isPublic:!1,roles:["user"],position:3}),this.addSubMenuItem("sidenav","people",{title:"Housing",state:"housing",isPublic:!1,roles:["user"],position:4}),this.addSubMenuItem("sidenav","people",{title:"Skill/Seta",state:"skils",isPublic:!1,roles:["user"],position:5}),this.addMenuItem("sidenav",{icon:"assets",title:"Assets & Things",state:"things","class":"sidenav-icon",isPublic:!1,roles:["user","admin"],position:6}),this.addSubMenuItem("sidenav","things",{title:"Vehicles",state:"vehicles",isPublic:!1,roles:["user"],position:0}),this.addSubMenuItem("sidenav","things",{title:"Equipment",state:"equipment",isPublic:!1,roles:["user"],position:1}),this.addMenuItem("sidenav",{icon:"money",title:"Financial",state:"financial","class":"sidenav-icon",isPublic:!1,roles:["user","admin"],position:8}),this.addSubMenuItem("sidenav","financial",{title:"Budgets",state:"budgets",isPublic:!1,roles:["user"],position:0}),this.addSubMenuItem("sidenav","financial",{title:"VAT",state:"vat",isPublic:!1,roles:["user"],position:1}),this.addSubMenuItem("sidenav","financial",{title:"Debtors",state:"debtors",isPublic:!1,roles:["user"],position:2}),this.addSubMenuItem("sidenav","financial",{title:"Creditors",state:"creditors",isPublic:!1,roles:["user"],position:3}),this.addMenuItem("sidenav",{icon:"admin",title:"Admin",state:"admin","class":"sidenav-icon",isPublic:!1,roles:["user","admin"],position:9}),this.addSubMenuItem("sidenav","admin",{title:"Meetings",state:"meetings",isPublic:!1,roles:["user"],position:0}),this.addSubMenuItem("sidenav","admin",{title:"Company Docs",state:"compantdocs",isPublic:!1,roles:["user"],position:1}),this.addMenuItem("sidenav",{icon:"users",title:"Users",state:"users.list","class":"sidenav-icon",isPublic:!1,roles:["admin"],position:10}),this.addMenuItem("sidenav",{icon:"guest",title:"Guests",state:"guests.list","class":"sidenav-icon",isPublic:!1,roles:["admin"],position:11}),this.addMenuItem("sidenav",{icon:"administrator",title:"Admins",state:"admins.list","class":"sidenav-icon",isPublic:!1,roles:["admin"],position:12})}]);
"use strict";angular.module("core").service("Socket",["Authentication","$state","$timeout",function(Authentication,$state,$timeout){Authentication.user?this.socket=io():$state.go("home"),this.on=function(eventName,callback){this.socket&&this.socket.on(eventName,function(data){$timeout(function(){callback(data)})})},this.emit=function(eventName,data){this.socket&&this.socket.emit(eventName,data)},this.removeListener=function(eventName){this.socket&&this.socket.removeListener(eventName)}}]);
"use strict";!function(){describe("Dashboard Controller Tests",function(){var DashboardController,scope,$httpBackend,$stateParams,$location;beforeEach(function(){jasmine.addMatchers({toEqualData:function(){return{compare:function(actual,expected){return{pass:angular.equals(actual,expected)}}}}})}),beforeEach(module(ApplicationConfiguration.applicationModuleName)),beforeEach(inject(function($controller,$rootScope,_$location_,_$stateParams_,_$httpBackend_){scope=$rootScope.$new(),$stateParams=_$stateParams_,$httpBackend=_$httpBackend_,$location=_$location_,DashboardController=$controller("DashboardController",{$scope:scope})})),it("Should do some controller test",inject(function(){}))})}();
"use strict";!function(){describe("Left Controller Tests",function(){var LeftController,scope,$httpBackend,$stateParams,$location;beforeEach(function(){jasmine.addMatchers({toEqualData:function(){return{compare:function(actual,expected){return{pass:angular.equals(actual,expected)}}}}})}),beforeEach(module(ApplicationConfiguration.applicationModuleName)),beforeEach(inject(function($controller,$rootScope,_$location_,_$stateParams_,_$httpBackend_){scope=$rootScope.$new(),$stateParams=_$stateParams_,$httpBackend=_$httpBackend_,$location=_$location_,LeftController=$controller("LeftController",{$scope:scope})})),it("Should do some controller test",inject(function(){}))})}();
"use strict";!function(){describe("Right Controller Tests",function(){var RightController,scope,$httpBackend,$stateParams,$location;beforeEach(function(){jasmine.addMatchers({toEqualData:function(){return{compare:function(actual,expected){return{pass:angular.equals(actual,expected)}}}}})}),beforeEach(module(ApplicationConfiguration.applicationModuleName)),beforeEach(inject(function($controller,$rootScope,_$location_,_$stateParams_,_$httpBackend_){scope=$rootScope.$new(),$stateParams=_$stateParams_,$httpBackend=_$httpBackend_,$location=_$location_,RightController=$controller("RightController",{$scope:scope})})),it("Should do some controller test",inject(function(){}))})}();
"use strict";angular.module("sites").controller("SitesController",["$scope","$stateParams","$location","Authentication","Sites",function($scope,$stateParams,$location,Authentication,Sites){$scope.authentication=Authentication,$scope.create=function(){var site=new Sites({title:this.title,content:this.content});site.$save(function(response){$location.path("sites/"+response._id),$scope.title="",$scope.content=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(site){if(site){site.$remove();for(var i in $scope.sites)$scope.sites[i]===site&&$scope.sites.splice(i,1)}else $scope.site.$remove(function(){$location.path("sites")})},$scope.update=function(){var site=$scope.site;site.$update(function(){$location.path("sites/"+site._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.sites=Sites.query()},$scope.findOne=function(){$scope.site=Sites.get({siteId:$stateParams.siteId})}}]);
"use strict";angular.module("sites").run(["Menus",function(){}]);
"use strict";angular.module("sites").config(["$stateProvider",function($stateProvider){$stateProvider.state("sites",{"abstract":!0,url:"/sites",template:"<ui-view/>"}).state("sites.list",{url:"",templateUrl:"modules/sites/views/list-sites.client.view.html"}).state("sites.create",{url:"/create",templateUrl:"modules/sites/views/create-site.client.view.html"}).state("sites.view",{url:"/:siteId",templateUrl:"modules/sites/views/view-site.client.view.html"}).state("sites.edit",{url:"/:siteId/edit",templateUrl:"modules/sites/views/edit-site.client.view.html"})}]);
"use strict";angular.module("sites").factory("Sites",["$resource",function($resource){return $resource("api/sites/:siteId",{sitedId:"@_id"},{update:{method:"PUT"}})}]);
"use strict";angular.module("ownerships").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Ownerships",state:"ownerships",type:"dropdown"}),Menus.addSubMenuItem("topbar","ownerships",{title:"List Ownerships",state:"ownerships.list"}),Menus.addSubMenuItem("topbar","ownerships",{title:"Create Ownership",state:"ownerships.create"})}]);
"use strict";angular.module("ownerships").config(["$stateProvider",function($stateProvider){$stateProvider.state("ownerships",{"abstract":!0,url:"/ownerships",template:"<ui-view/>"}).state("ownerships.list",{url:"",templateUrl:"modules/ownerships/views/list-ownerships.client.view.html"}).state("ownerships.create",{url:"/create",templateUrl:"modules/ownerships/views/create-ownership.client.view.html"}).state("ownerships.view",{url:"/:ownershipId",templateUrl:"modules/ownerships/views/view-ownership.client.view.html"}).state("ownerships.edit",{url:"/:ownershipId/edit",templateUrl:"modules/ownerships/views/edit-ownership.client.view.html"})}]);
"use strict";angular.module("ownerships").controller("OwnershipsController",["$scope","$stateParams","$location","Authentication","Ownerships",function($scope,$stateParams,$location,Authentication,Ownerships){$scope.authentication=Authentication,$scope.create=function(){var ownership=new Ownerships({name:this.name});ownership.$save(function(response){$location.path("ownerships/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(ownership){if(ownership){ownership.$remove();for(var i in $scope.ownerships)$scope.ownerships[i]===ownership&&$scope.ownerships.splice(i,1)}else $scope.ownership.$remove(function(){$location.path("ownerships")})},$scope.update=function(){var ownership=$scope.ownership;ownership.$update(function(){$location.path("ownerships/"+ownership._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.ownerships=Ownerships.query()},$scope.findOne=function(){$scope.ownership=Ownerships.get({ownershipId:$stateParams.ownershipId})}}]);
"use strict";angular.module("ownerships").factory("Ownerships",["$resource",function($resource){return $resource("api/ownerships/:ownershipId",{ownershipId:"@_id"},{update:{method:"PUT"}})}]);

"use strict";!function(){describe("Admins Controller Tests",function(){var AdminsController,scope,$httpBackend,$stateParams,$location;beforeEach(function(){jasmine.addMatchers({toEqualData:function(){return{compare:function(actual,expected){return{pass:angular.equals(actual,expected)}}}}})}),beforeEach(module(ApplicationConfiguration.applicationModuleName)),beforeEach(inject(function($controller,$rootScope,_$location_,_$stateParams_,_$httpBackend_){scope=$rootScope.$new(),$stateParams=_$stateParams_,$httpBackend=_$httpBackend_,$location=_$location_,AdminsController=$controller("AdminsController",{$scope:scope})})),it("Should do some controller test",inject(function(){}))})}();
"use strict";!function(){describe("Dialog Controller Tests",function(){var DialogController,scope,$httpBackend,$stateParams,$location;beforeEach(function(){jasmine.addMatchers({toEqualData:function(){return{compare:function(actual,expected){return{pass:angular.equals(actual,expected)}}}}})}),beforeEach(module(ApplicationConfiguration.applicationModuleName)),beforeEach(inject(function($controller,$rootScope,_$location_,_$stateParams_,_$httpBackend_){scope=$rootScope.$new(),$stateParams=_$stateParams_,$httpBackend=_$httpBackend_,$location=_$location_,DialogController=$controller("DialogController",{$scope:scope})})),it("Should do some controller test",inject(function(){}))})}();
"use strict";!function(){describe("Users Controller Tests",function(){var UsersController,scope,$httpBackend,$stateParams,$location;beforeEach(function(){jasmine.addMatchers({toEqualData:function(){return{compare:function(actual,expected){return{pass:angular.equals(actual,expected)}}}}})}),beforeEach(module(ApplicationConfiguration.applicationModuleName)),beforeEach(inject(function($controller,$rootScope,_$location_,_$stateParams_,_$httpBackend_){scope=$rootScope.$new(),$stateParams=_$stateParams_,$httpBackend=_$httpBackend_,$location=_$location_,UsersController=$controller("UsersController",{$scope:scope})})),it("Should do some controller test",inject(function(){}))})}();
